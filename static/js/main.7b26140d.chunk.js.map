{"version":3,"sources":["components/styles.module.css","components/ImageGalleryItem.js","components/Searchbar.js","apiService/ApiService.js","components/Modal.js","components/ImageGallery.js","App.js","index.js"],"names":["module","exports","ImageGalleryItem","imgArray","onGalleryImageClick","map","el","className","style","src","webformatURL","alt","tags","ImageGalleryItem__image","onClick","id","Searchbar","onSubmit","useState","find","setFind","SearchForm","e","preventDefault","trim","alert","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","value","autoComplete","autoFocus","placeholder","onChange","target","ImagesApiService","this","searchQuery","page","base_url","pixabay","key","per_page","newQuery","url","axios","get","then","result","data","Modal","toggleModal","bigImg","useEffect","window","addEventListener","handleEscape","removeEventListener","code","Overlay","currentTarget","largeImageURL","newImagesApiService","ImageGallery","scroll","setImgArray","setPage","status","setStatus","showModal","setShowModal","setBigImg","searchImg","setSearchImg","query","console","log","searchImages","hits","length","catch","error","text","loading","color","height","width","timeout","imgSrc","pages","Button","App","state","scrollTo","top","document","documentElement","offsetHeight","behavior","onPageScroll","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b26140d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"styles_Searchbar__MZQM7\",\"SearchForm\":\"styles_SearchForm__1UtAm\",\"SearchForm__button\":\"styles_SearchForm__button__3mzZE\",\"SearchForm__buttonLabel\":\"styles_SearchForm__buttonLabel__1wo7B\",\"SearchForm__input\":\"styles_SearchForm__input__37bpK\",\"ImageGallery\":\"styles_ImageGallery__2VuoT\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__1XQjo\",\"ImageGalleryItem__image\":\"styles_ImageGalleryItem__image__3RMIn\",\"ImageGalleryItem-image\":\"styles_ImageGalleryItem-image__11jwm\",\"Overlay\":\"styles_Overlay__3VHVn\",\"Modal\":\"styles_Modal__1k8UN\",\"Button\":\"styles_Button__2BlLB\",\"text\":\"styles_text__2THab\",\"loading\":\"styles_loading__3zoc0\"};","import style from \"./styles.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({imgArray, onGalleryImageClick}) {\n  return imgArray.map((el) => (\n      <li className={style.ImageGalleryItem} key={el.id}>\n        <img\n          src={el.webformatURL}\n          alt={el.tags}\n          className={style.ImageGalleryItem__image}\n          onClick={onGalleryImageClick}\n        />\n      </li>\n    ));\n}\n\nImageGalleryItem.propTypes = {\n  imgArray: PropTypes.array.isRequired,\n  onGalleryImageClick: PropTypes.func.isRequired,\n};\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./styles.module.css\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [find, setFind] = useState(\"\");\n\n  const handleChangeInput = (e) => {\n    setFind(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (find.trim() === \"\") {\n      alert(\"Please type searchihg query\");\n      return;\n    }\n    onSubmit(find);\n    setFind(\"\");\n  };\n\n  return (\n      <header className={style.Searchbar}>\n        <form className={style.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={style.SearchForm__button}>\n            <span className={style.SearchForm__buttonLabel}>Search</span>\n          </button>\n\n          <input\n            className={style.SearchForm__input}\n            type=\"text\"\n            value={find}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={handleChangeInput}\n          />\n        </form>\n      </header>\n    );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\nimport pixabay from \"../apiService/pixabay.json\";\n\nexport default class ImagesApiService {\n  constructor() {\n    this.searchQuery = \"\";\n    this.page = 1;\n    this.base_url = pixabay.base_url;\n    this.key = pixabay.key;\n    this.per_page = pixabay.per_page;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n  get pages() {\n    return this.page;\n  }\n  set pages(value) {\n    this.page += value;\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  searchImages() {\n    const url = `${this.base_url}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=${this.per_page}&key=${this.key}`;\n    return axios.get(url).then((result) => result.data);\n  }\n}\n","import { useEffect } from \"react\";\nimport style from \"./styles.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Modal({ toggleModal, bigImg }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleEscape);\n    return () => window.removeEventListener(\"keydown\", handleEscape);\n  });\n\n  const handleEscape = (e) => {\n    if (e.code === \"Escape\") {\n      toggleModal();\n    }\n  };\n  const handleClose = (e) => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  return (\n      <div className={style.Overlay} onClick={handleClose}>\n        <div className={style.Modal}>\n          <img\n            src={bigImg.largeImageURL}\n            alt={bigImg.tags}\n          />\n        </div>\n      </div>\n    );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  bigImg: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport style from \"./styles.module.css\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport Searchbar from \"./Searchbar\";\nimport PropTypes from \"prop-types\";\nimport ImagesApiService from \"../apiService/ApiService\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./Modal\";\n\nconst newImagesApiService = new ImagesApiService();\n\nexport default function ImageGallery({ scroll}) {\n  const [imgArray, setImgArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(\"idle\");\n  const [showModal, setShowModal] = useState(false);\n  const [bigImg, setBigImg] = useState(null);\n  const [searchImg, setSearchImg] = useState(\"\");\n\n  useEffect(() => {\n    if (searchImg === \"\") { return;}\n    // if (prev !== searchImg) {\n    setStatus(\"pending\");\n    setPage(1);\n      // newImagesApiService.resetPage();\n    newImagesApiService.query = searchImg;\n    console.log('searchImg',searchImg);\n      newImagesApiService\n        .searchImages()\n        .then((data) => {\n          if (data.hits.length > 0) {\n            console.log('data.hits', data.hits);\n            setImgArray(data.hits);\n            //???\n            // setPage(newImagesApiService.pages);\n            //\n            setStatus(\"success\");\n          } else {\n            setStatus(\"error\");\n          }\n        })\n        .catch((error) => {\n          setStatus(\"error\");\n        });\n    // }\n  }, [searchImg, scroll]);\n  \n  // useEffect(() => { \n  //   newImagesApiService\n  //     .searchImages()\n  //     .then((data) => {\n  //       setImgArray((prev)=>[...prev, ...data.hits]);\n  //       // setPage(newImagesApiService.pages);\n  //       setStatus(\"success\");\n  //       scroll();\n  //     })\n  //     .catch((error) => {\n  //       setStatus(\"error\");\n  //     });\n  // }, [page, scroll]);\n\n  const handleClick = () => {\n    // setPage((prev) => prev + 1);\n    newImagesApiService.pages = 1;\n\n    // newImagesApiService\n    //   .searchImages()\n    //   .then((data) => {\n    //     setImgArray([...prev.imgArray, ...data.hits]);\n    //     setPage(newImagesApiService.pages);\n    //     setStatus(\"success\");\n    //     scroll();\n    //   })\n    //   .catch((error) => {\n    //     setStatus(\"error\");\n    //   });\n  };\n\n  const toggleModal = () => { setShowModal(!showModal) };\n\n  const onGalleryImageClick = (e) => {\n    e.preventDefault();\n    let imgSrc = e.target.src;\n    setBigImg(imgArray.find((el) => el.webformatURL === imgSrc));\n    // this.setState({\n    //   bigImg: imgArray.find((el) => el.webformatURL === imgSrc),\n    // });\n\n    // toggleModal();\n    setShowModal(!showModal);\n  };\n\n  const onSubmit = (data) => {\n    setSearchImg(data)\n    // this.setState({ searchImg: data });\n  };\n\n  return <>\n    <Searchbar onSubmit={onSubmit} />\n    {(status === \"idle\") && <p className={style.text}>Hello! Type some searching query</p>}\n    {(status === \"pending\")&& <Loader\n          type=\"Circles\"\n          className={style.loading}\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={7000} //3 secs\n    />}\n    {(status === \"success\") &&\n      <>\n          <ul className={style.ImageGallery}>\n            <ImageGalleryItem\n              imgArray={imgArray}\n              onGalleryImageClick={onGalleryImageClick}\n            />\n          </ul>\n          <button\n            type=\"button\"\n            onClick={handleClick}\n            className={style.Button}\n          >\n            Load more\n          </button>\n          {showModal && (\n            <Modal toggleModal={toggleModal} bigImg={bigImg}></Modal>\n          )}\n      </>}\n    {(status === \"error\")&& <p className={style.text}>Ooops! Something went wrong</p>}\n    </>\n}\n\n// export default class ImageGallery extends Component {\n  // state = {\n  //   imgArray: [],\n  //   page: 1,\n  //   status: \"idle\",\n  //   showModal: false,\n  //   bigImg: null,\n  // };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.searchImg !== this.props.searchImg) {\n  //     this.setState({ status: \"pending\" });\n  //     newImagesApiService.resetPage();\n  //     newImagesApiService.query = this.props.searchImg;\n  //     newImagesApiService\n  //       .searchImages()\n  //       .then((data) => {\n  //         if (data.hits.length > 0) {\n  //           this.setState({\n  //             imgArray: data.hits,\n  //             page: newImagesApiService.pages,\n  //             status: \"success\",\n  //           });\n  //         } else {\n  //           this.setState({ status: \"error\" });\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         this.setState({ status: \"error\" });\n  //       });\n  //   }\n  // }\n\n  // handleClick = () => {\n  //   newImagesApiService.pages = 1;\n  //   newImagesApiService\n  //     .searchImages()\n  //     .then((data) => {\n  //       this.setState((prev) => ({\n  //         imgArray: [...prev.imgArray, ...data.hits],\n  //         page: newImagesApiService.pages,\n  //         status: \"success\",\n  //       }));\n  //       this.props.scroll();\n  //     })\n  //     .catch((error) => {\n  //       this.setState({ status: \"error\" });\n  //     });\n  // };\n\n  // toggleModal = () => {\n  //   this.setState({ showModal: !this.state.showModal });\n  // };\n\n  // onGalleryImageClick = (e) => {\n  //   e.preventDefault();\n  //   let imgSrc = e.target.src;\n  //   this.setState({\n  //     bigImg: this.state.imgArray.find((el) => el.webformatURL === imgSrc),\n  //   });\n  //   this.toggleModal();\n  // };\n\n//   render() {\n//     const { imgArray, showModal, status, bigImg } = this.state;\n\n//     if (status === \"idle\") {\n//       return <p className={style.text}>Hello! Type some searching query</p>;\n//     }\n//     if (status === \"pending\") {\n//       return (\n//         <Loader\n//           type=\"Circles\"\n//           className={style.loading}\n//           color=\"#00BFFF\"\n//           height={100}\n//           width={100}\n//           timeout={7000} //3 secs\n//         />\n//       );\n//     }\n//     if (status === \"success\") {\n//       return (\n//         <>\n//           <ul className={style.ImageGallery}>\n//             <ImageGalleryItem\n//               imgArray={imgArray}\n//               onGalleryImageClick={this.onGalleryImageClick}\n//             />\n//           </ul>\n//           <button\n//             type=\"button\"\n//             onClick={this.handleClick}\n//             className={style.Button}\n//           >\n//             Load more\n//           </button>\n//           {showModal && (\n//             <Modal toggleModal={this.toggleModal} bigImg={bigImg}></Modal>\n//           )}\n//         </>\n//       );\n//     }\n//     if (status === \"error\") {\n//       return <p className={style.text}>Ooops! Something went wrong</p>;\n//     }\n//   }\n// }\n\nImageGallery.propTypes = {\n  searchImg: PropTypes.string.isRequired,\n  scroll: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\n// import Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nclass App extends Component {\n  state = {\n    searchImg: \"\",\n  };\n\n  // onSubmit = (data) => {\n  //   this.setState({ searchImg: data });\n  // };\n\n  onPageScroll() {\n    window.scrollTo({\n      top: document.documentElement.offsetHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Searchbar onSubmit={this.onSubmit} /> */}\n        {/* searchImg={this.state.searchImg} */}\n        <ImageGallery\n          scroll={this.onPageScroll}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}